name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

  projectFile: src/AzTableImport/AzTableImport.csproj

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true

    # - name: Output Run ID
    #   run: echo ${{ github.run_id }}
    # - name: Output Run Number
    #   run: echo ${{ github.run_number }}

    # - name: Restore dependencies
    #   run: dotnet restore $projectFile
    # tag versions "v{Major}.{Minor}.{Build}"
    - name: Create Version Information
      run: |
        echo "Git hub ref var: ${GITHUB_REF} ---- $GITHUB_REF"
        if [ ${GITHUB_REF} = *"/tags"* ]; then
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]}"
          VERSION="${VERSION//v}.${{ github.run_number }}"
        elif [ "${GITHUB_REF}" = "refs/main" ]; then
          VERSION="1.0.${{ github.run_number }}"
        else
          VERSION="0.0.${{ github.run_number }}"
        fi
        echo Version set to: $VERSION
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build/Publish Win10
      run: |
        dotnet publish -c Release -r win10-x64 /p:Version=$VERSION $projectFile

    - name: Build/Publish Linux
      run: |
        dotnet publish -c Release -r linux-x64 /p:Version=$VERSION $projectFile

    - uses: actions/upload-artifact@v2
      with:
        name: net6-managed-${{env.VERSION}}-win10
        path: src/AzTableImport/bin/Release/net6.0/win10-x64/publish/
    - uses: actions/upload-artifact@v2
      with:
        name: net6-managed-${{env.VERSION}}-linux
        path: src/AzTableImport/bin/Release/net6.0/linux-x64/publish/
#    - name: Test
#      run: dotnet test --no-build --verbosity normal
